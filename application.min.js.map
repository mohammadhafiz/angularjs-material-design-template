{"version":3,"sources":["functions.js","application.js","settings.js","charts.js","dashboard.js","forms.js","tables.js","en.js","ms.js","dashboard/dashboard_controller.js","charts/charts_controller.js","forms/forms_controller.js","tables/tables_controller.js","dashboard_menu_controller.js","api.js","auth.js","http_interceptor.js"],"names":["w","a","encrypt","m","k","element","document","injector","get","e","CryptoJS","AES","toString","decrypt","d","enc","Utf8","window","angular","application","module","config","$httpProvider","defaults","headers","common","Content-Type","post","put","delete","interceptors","push","$mdThemingProvider","alwaysWatchTheme","theme","primaryPalette","accentPalette","default","$translateProvider","useSanitizeValueStrategy","preferredLanguage","$locationProvider","$routeProvider","html5Mode","hashPrefix","otherwise","redirectTo","factory","settings","when","controller","templateUrl","resolve","isGuest","Auth","translations","action_back","action_menu","action_reset","action_search","title_insert_chart","title_dashboard","title_drop_down","title_form","title_home","title_menu","title_sample_pages","title_table","title_ui_element","toast_incorrect_credentials","toast_invalid_refresh_token","toast_method_not_allowed","toast_validation_failed","validation_maxlength_24","validation_maxlength_255","validation_maxlength_40","validation_minlength_4","validation_required","$location","$mdSidenav","$scope","$translate","query","username","close","reset","$","menu","open","dashboard","path","charts","tables","forms","uiElement","dropDown","samplePage","Settings","api","access_token","session","users","endpoint","host","concat","$http","$q","$window","API","auth","forget","deferred","defer","localStorage","removeItem","promise","handler","response","expires_in","data","refresh_token","token_type","id","hasOwnProperty","fromJson","isLogged","then","reject","refresh","grant_type","user_id","user_secret","scope","scopes","join","console","info","toJson","type","verify","credentials","password","$injector","refreshPromise","httpInterceptor","request","Authorization","responseError","rejection","error","status","text","$mdToast","toast","simple","content","position","show","message"],"mappings":"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","file":"application.min.js","sourcesContent":["(function(w, a)\r\n{\r\n    w.encrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var e = w.CryptoJS.AES.encrypt(m, k);\r\n        return e.toString();\r\n    };\r\n\r\n    w.decrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var d = w.CryptoJS.AES.decrypt(m, k);\r\n        return d.toString(w.CryptoJS.enc.Utf8);\r\n    };\r\n})(window, angular);\r\n","var application = angular.module('application', [\r\n    'm',\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngMaterial',\r\n    'ngMessageFormat',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'pascalprecht.translate', // angular-translate\r\n    'application.templates', // application templates cache\r\n]);\r\n\r\napplication.config(['$httpProvider',\r\n    function($httpProvider)\r\n    {\r\n        $httpProvider.defaults.headers = {\r\n            common: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            post: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            put: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            delete: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        $httpProvider.interceptors.push('HttpInterceptor');\r\n    }]);\r\n\r\napplication.config(['$mdThemingProvider',\r\n    function($mdThemingProvider)\r\n    {\r\n        $mdThemingProvider.alwaysWatchTheme(true);\r\n        \r\n        $mdThemingProvider.theme('cyan')\r\n            .primaryPalette('cyan')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('green')\r\n            .primaryPalette('green')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('purple')\r\n            .primaryPalette('purple')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('red')\r\n            .primaryPalette('red')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('teal')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('grey')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n\r\n        $mdThemingProvider.theme('white')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n    }]);\r\n\r\napplication.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.useSanitizeValueStrategy('sanitize');\r\n        $translateProvider.preferredLanguage('en');\r\n    }]);\r\n\r\napplication.config(['$locationProvider', '$routeProvider',\r\n    function($locationProvider, $routeProvider)\r\n    {\r\n        $locationProvider.html5Mode(true)\r\n            .hashPrefix('!#');\r\n\r\n        $routeProvider.otherwise({\r\n                redirectTo: '/dashboard',\r\n            });\r\n    }]);\r\n","application.factory('Settings',\r\n    function()\r\n    {\r\n        var settings = {};\r\n        return settings;\r\n    });\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/charts', {\r\n                controller: 'ChartsController',\r\n                templateUrl: 'charts/charts.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/dashboard', {\r\n                controller: 'DashboardController',\r\n                templateUrl: 'dashboard/dashboard.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/forms', {\r\n                controller: 'FormsController',\r\n                templateUrl: 'forms/forms.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/tables', {\r\n                controller: 'TablesController',\r\n                templateUrl: 'tables/tables.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('en', {\r\n            \r\n            'action_back': 'Back',\r\n            'action_menu': 'Menu',\r\n            'action_reset': 'Reset',\r\n            'action_search': 'Search',\r\n            \r\n            'title_insert_chart': 'Charts',\r\n            'title_dashboard': 'Dashboard',\r\n            'title_drop_down': 'Multi-Level DropDown',\r\n            'title_form': 'Form',\r\n            'title_home': 'Home',\r\n            'title_menu': 'Menu',\r\n            'title_sample_pages': 'Sample Pages',\r\n            'title_table': 'Tables',\r\n            'title_ui_element': 'Ui Element',\r\n\r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('ms', {\r\n        \r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.controller('DashboardController', ['$location', '$mdSidenav', '$scope', '$translate',\r\n    function($location, $mdSidenav, $scope, $translate)\r\n    {\r\n        $scope.theme = 'cyan';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n    }]);\r\n","application.controller('ChartsController', ['$location', '$mdSidenav', '$scope', '$translate',\r\n    function($location, $mdSidenav, $scope, $translate)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n    }]);\r\n","application.controller('FormsController', ['$location', '$mdSidenav', '$scope', '$translate',\r\n    function($location, $mdSidenav, $scope, $translate)\r\n    {\r\n        $scope.theme = 'green';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n    }]);\r\n","application.controller('TablesController', ['$location', '$mdSidenav', '$scope', '$translate',\r\n    function($location, $mdSidenav, $scope, $translate)\r\n    {\r\n        $scope.theme = 'red';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n    }]);\r\n","application.controller('DashboardMenuController', ['$location', '$scope',\r\n    function($location, $scope)\r\n    {\r\n        $scope.dashboard = function()\r\n        {\r\n            $location.path('/dashboard');\r\n        };\r\n        \r\n        $scope.charts = function()\r\n        {\r\n            $location.path('/charts');\r\n        };\r\n\r\n        $scope.tables = function()\r\n        {\r\n            $location.path('/tables');\r\n        };\r\n\r\n        $scope.forms = function()\r\n        {\r\n            $location.path('/forms');\r\n        };\r\n\r\n        $scope.uiElement = function()\r\n        {\r\n            $location.path('/uiElement');\r\n        };\r\n\r\n        $scope.dropDown = function()\r\n        {\r\n            $location.path('/dropDown');\r\n        };\r\n\r\n        $scope.samplePage = function()\r\n        {\r\n            $location.path('/samplePage');\r\n        };\r\n    }]);\r\n","application.factory('API', ['Settings',\r\n    function(Settings)\r\n    {\r\n        var api = {};\r\n\r\n        api.access_token    = '/api/access_token';\r\n        api.session         = '/api/session';\r\n        api.users           = '/api/users/:user_id';\r\n        \r\n        api.get = function(endpoint)\r\n        {\r\n            return Settings.host.concat(api[endpoint]);\r\n        };\r\n\r\n        return api;\r\n    }]);\r\n","application.factory('Auth', ['$http', '$location', '$q', '$window', 'API', 'Settings',\r\n    function($http, $location, $q, $window, API, Settings)\r\n    {\r\n        var auth = {};\r\n\r\n        auth.forget = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            $window.localStorage.removeItem('expires_in');\r\n            $window.localStorage.removeItem('access_token');\r\n            $window.localStorage.removeItem('refresh_token');\r\n            $window.localStorage.removeItem('token_type');\r\n            $window.localStorage.removeItem('id');\r\n            $window.localStorage.removeItem('type');\r\n            $window.localStorage.removeItem('scopes');\r\n            $location.path('/login');\r\n\r\n            deferred.resolve();\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.handler = function(response)\r\n        {\r\n            $window.localStorage.expires_in      = response.data.expires_in;\r\n            $window.localStorage.access_token    = response.data.access_token;\r\n            $window.localStorage.refresh_token   = response.data.refresh_token;\r\n            $window.localStorage.token_type      = response.data.token_type;\r\n            return response;\r\n        };\r\n\r\n        auth.id = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('id')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.id);\r\n        };\r\n\r\n        auth.isGuest = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            auth.isLogged()\r\n                .then(function()\r\n                {\r\n                    deferred.reject('auth.is_guest');\r\n                })\r\n                .catch(function()\r\n                {\r\n                    deferred.resolve(true);\r\n                });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.isLogged = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            if ($window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type')) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                deferred.reject('auth.is_logged');\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.refresh = function()\r\n        {\r\n            var data = {\r\n                grant_type: 'refresh_token',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                refresh_token: $window.localStorage.refresh_token,\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        auth.scopes = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('scopes')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.scopes);\r\n        };\r\n\r\n        auth.session = function()\r\n        {\r\n            return $http.get(API.get('session'))\r\n                .then(function(session)\r\n                {\r\n                    console.info(session);\r\n                    $window.localStorage.id = angular.toJson(session.data.id);\r\n                    $window.localStorage.type = angular.toJson(session.data.type);\r\n                    $window.localStorage.scopes = angular.toJson(session.data.scopes);\r\n                });\r\n        };\r\n\r\n        auth.type = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('type')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.type);\r\n        };\r\n\r\n        auth.verify = function(credentials)\r\n        {\r\n            var data = {\r\n                grant_type: 'password',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                username: credentials['username'],\r\n                password: credentials['password'],\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        return auth;\r\n    }]);\r\n\r\n","application.factory('HttpInterceptor', ['$injector', '$q', '$translate', '$window',\r\n    function($injector, $q, $translate, $window)\r\n    {\r\n        var refreshPromise = null;\r\n\r\n        var httpInterceptor = {};\r\n\r\n        httpInterceptor.request = function(config)\r\n        {\r\n            if ($injector.get('Auth').isLogged()) {\r\n                var token_type = $window.localStorage.token_type;\r\n                var access_token = $window.localStorage.access_token;\r\n                config.headers.Authorization = token_type + ' ' + access_token;\r\n            }\r\n\r\n            return config;\r\n        };\r\n\r\n        httpInterceptor.responseError = function(rejection)\r\n        {\r\n            console.error(rejection);\r\n\r\n            switch (rejection.status) {\r\n                case 401:\r\n                    refreshPromise = refreshPromise ? refreshPromise :\r\n                        $injector.get('Auth').refresh();\r\n\r\n                    return refreshPromise.finally(function()\r\n                        {\r\n                            refreshPromise = null;\r\n                        })\r\n                        .then(function()\r\n                        {\r\n                            return $injector.get('$http')(rejection.config);\r\n                        });\r\n\r\n                case 405:\r\n                    $translate('toast_method_not_allowed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 422:\r\n                    $translate('toast_validation_failed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 500:\r\n                    if (rejection.data.message == 'The user credentials were incorrect.') {\r\n                        $translate('toast_incorrect_credentials')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n\r\n                        return $q.reject(rejection);\r\n                    }\r\n\r\n                    if (rejection.data.message == 'The refresh token is invalid.') {\r\n                        $translate('toast_invalid_refresh_token')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n                    }\r\n\r\n                    $injector.get('Auth')\r\n                        .forget();\r\n\r\n                    return $q.reject(rejection);\r\n            }\r\n        };\r\n\r\n        return httpInterceptor;\r\n    }]);\r\n"],"sourceRoot":"/source/"}