{"version":3,"sources":["functions.js","application.js","settings.js","charts.js","dashboard.js","drop_down.js","forms.js","sample_pages.js","tables.js","ui_element.js","en.js","ms.js","charts/charts_controller.js","dashboard/dashboard_controller.js","drop_down/drop_down_controller.js","forms/forms_controller.js","sample_pages/sample_pages_controller.js","tables/tables_controller.js","ui_element/ui_element_controller.js","dashboard_menu_controller.js","api.js","auth.js","http_interceptor.js"],"names":["w","a","encrypt","m","k","element","document","injector","get","e","CryptoJS","AES","toString","decrypt","d","enc","Utf8","window","angular","application","module","config","$httpProvider","defaults","headers","common","Content-Type","post","put","delete","interceptors","push","$mdThemingProvider","alwaysWatchTheme","theme","primaryPalette","accentPalette","default","$translateProvider","useSanitizeValueStrategy","preferredLanguage","$locationProvider","$routeProvider","html5Mode","hashPrefix","otherwise","redirectTo","factory","settings","when","controller","templateUrl","resolve","isGuest","Auth","translations","action_back","action_email","action_menu","action_notifications","action_reset","action_search","title_insert_chart","title_dashboard","title_drop_down","title_form","title_home","title_menu","title_sample_pages","title_table","title_ui_element","toast_incorrect_credentials","toast_invalid_refresh_token","toast_method_not_allowed","toast_validation_failed","validation_maxlength_24","validation_maxlength_255","validation_maxlength_40","validation_minlength_4","validation_required","$mdSidenav","$scope","close","menu","open","query","username","reset","$","$interval","self","this","j","counter","mode","activated","determinateValue","determinateValue2","modes","toggleActivation","contained","$translate","user","title","email","firstName","lastName","company","address","address2","city","state","biography","postalCode","title1","title4","isDisabled","googleUrl","items","exists","item","list","indexOf","myDate","Date","minDate","getFullYear","getMonth","getDate","maxDate","color","red","Math","floor","random","green","blue","rating1","rating2","rating3","disabled1","disabled2","selected","toggle","idx","splice","$location","dashboard","path","charts","tables","forms","uiElement","dropDown","samplePages","Settings","api","access_token","session","users","endpoint","host","concat","$http","$q","$window","API","auth","forget","deferred","defer","localStorage","removeItem","promise","handler","response","expires_in","data","refresh_token","token_type","id","hasOwnProperty","fromJson","isLogged","then","reject","refresh","grant_type","user_id","user_secret","scope","scopes","join","console","info","toJson","type","verify","credentials","password","$injector","refreshPromise","httpInterceptor","request","Authorization","responseError","rejection","error","status","text","$mdToast","toast","simple","content","position","show","message"],"mappings":"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","file":"application.min.js","sourcesContent":["(function(w, a)\r\n{\r\n    w.encrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var e = w.CryptoJS.AES.encrypt(m, k);\r\n        return e.toString();\r\n    };\r\n\r\n    w.decrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var d = w.CryptoJS.AES.decrypt(m, k);\r\n        return d.toString(w.CryptoJS.enc.Utf8);\r\n    };\r\n})(window, angular);\r\n","var application = angular.module('application', [\r\n    'm',\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngMaterial',\r\n    'ngMessageFormat',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'pascalprecht.translate', // angular-translate\r\n    'application.templates', // application templates cache\r\n]);\r\n\r\napplication.config(['$httpProvider',\r\n    function($httpProvider)\r\n    {\r\n        $httpProvider.defaults.headers = {\r\n            common: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            post: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            put: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            delete: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        $httpProvider.interceptors.push('HttpInterceptor');\r\n    }]);\r\n\r\napplication.config(['$mdThemingProvider',\r\n    function($mdThemingProvider)\r\n    {\r\n        $mdThemingProvider.alwaysWatchTheme(true);\r\n        \r\n        $mdThemingProvider.theme('cyan')\r\n            .primaryPalette('cyan')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('deep-purple')\r\n            .primaryPalette('deep-purple')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('green')\r\n            .primaryPalette('green')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('light-green')\r\n            .primaryPalette('light-green')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('purple')\r\n            .primaryPalette('purple')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('pink')\r\n            .primaryPalette('pink')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('red')\r\n            .primaryPalette('red')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('teal')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('grey')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n\r\n        $mdThemingProvider.theme('white')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n    }]);\r\n\r\napplication.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.useSanitizeValueStrategy('sanitize');\r\n        $translateProvider.preferredLanguage('en');\r\n    }]);\r\n\r\napplication.config(['$locationProvider', '$routeProvider',\r\n    function($locationProvider, $routeProvider)\r\n    {\r\n        $locationProvider.html5Mode(true)\r\n            .hashPrefix('!#');\r\n\r\n        $routeProvider.otherwise({\r\n                redirectTo: '/dashboard',\r\n            });\r\n    }]);\r\n","application.factory('Settings',\r\n    function()\r\n    {\r\n        var settings = {};\r\n        return settings;\r\n    });\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/charts', {\r\n                controller: 'ChartsController',\r\n                templateUrl: 'charts/charts.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/dashboard', {\r\n                controller: 'DashboardController',\r\n                templateUrl: 'dashboard/dashboard.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/dropDown', {\r\n                controller: 'DropDownController',\r\n                templateUrl: 'drop_down/drop_down.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/forms', {\r\n                controller: 'FormsController',\r\n                templateUrl: 'forms/forms.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/samplePages', {\r\n                controller: 'SamplePagesController',\r\n                templateUrl: 'sample_pages/sample_pages.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/tables', {\r\n                controller: 'TablesController',\r\n                templateUrl: 'tables/tables.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/uiElement', {\r\n                controller: 'UiElementController',\r\n                templateUrl: 'ui_element/ui_element.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('en', {\r\n            \r\n            'action_back': 'Back',\r\n            'action_email': 'Email',\r\n            'action_menu': 'Menu',\r\n            'action_notifications': 'Notifications',\r\n            'action_reset': 'Reset',\r\n            'action_search': 'Search',\r\n            \r\n            'title_insert_chart': 'Charts',\r\n            'title_dashboard': 'Dashboard',\r\n            'title_drop_down': 'Multi-Level DropDown',\r\n            'title_form': 'Forms',\r\n            'title_home': 'Home',\r\n            'title_menu': 'Menu',\r\n            'title_sample_pages': 'Sample Pages',\r\n            'title_table': 'Tables',\r\n            'title_ui_element': 'Ui Element',\r\n\r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('ms', {\r\n        \r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.controller('ChartsController', ['$mdSidenav', '$scope',\r\n    function($mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n    }]);\r\n","application.controller('DashboardController', ['$interval', '$mdSidenav', '$scope',\r\n    function($interval, $mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'cyan';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n\r\n        var self = this, j= 0, counter = 0;\r\n        self.mode = 'query';\r\n        self.activated = true;\r\n        self.determinateValue = 30;\r\n        self.determinateValue2 = 30;\r\n        self.modes = [ ];\r\n\r\n        self.toggleActivation = function() {\r\n            if ( !self.activated ) self.modes = [ ];\r\n            if (  self.activated ) {\r\n              j = counter = 0;\r\n              self.determinateValue = 30;\r\n              self.determinateValue2 = 30;\r\n            }\r\n        };\r\n        \r\n        $interval(function() {\r\n          self.determinateValue += 1;\r\n          self.determinateValue2 += 1.5;\r\n          if (self.determinateValue > 100) self.determinateValue = 30;\r\n          if (self.determinateValue2 > 100) self.determinateValue2 = 30;\r\n            if ( (j < 2) && !self.modes[j] && self.activated ) {\r\n              self.modes[j] = (j==0) ? 'buffer' : 'query';\r\n            }\r\n            if ( counter++ % 4 == 0 ) j++;\r\n            if ( j == 2 ) self.contained = \"indeterminate\";\r\n        }, 100, 0, true);\r\n        $interval(function() {\r\n          self.mode = (self.mode == 'query' ? 'determinate' : 'query');\r\n        }, 7200, 0, true);\r\n}]);","application.controller('DropDownController', ['$mdSidenav', '$scope',\r\n    function($mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n    }]);","application.controller('FormsController', ['$mdSidenav', '$scope', '$translate',\r\n    function($mdSidenav, $scope, $translate)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            $: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n        \r\n        $scope.user = \r\n        {\r\n          title: 'Developer',\r\n          email: 'mohammadhafizamiruddin@gmail.com',\r\n          firstName: 'Mohammad Hafiz',\r\n          lastName: 'Amiruddin' ,\r\n          company: 'Menggaris It Sdn Bhd' ,\r\n          address: 'Batu 3' ,\r\n          address2: 'Jalan Apas' ,\r\n          city: 'Tawau' ,\r\n          state: 'Sabah' ,\r\n          biography: 'Loves kittens, snowboarding, and can type at 130 WPM.\\n\\nAnd rumor has it she bouldered up Castle Craig!',\r\n          postalCode : '91000'\r\n        };\r\n    \r\n          $scope.title1 = 'Button';\r\n          $scope.title4 = 'Warn';\r\n          $scope.isDisabled = true;\r\n          $scope.googleUrl = 'http://google.com';\r\n}]);","application.controller('SamplePagesController', ['$mdSidenav', '$scope',\r\n    function($mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n    }]);\r\n","application.controller('TablesController', ['$mdSidenav', '$scope',\r\n    function($mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n    }]);\r\n","application.controller('UiElementController', ['$mdSidenav', '$scope',\r\n    function($mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'deep-purple';\r\n\r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('menu').close();\r\n        };\r\n\r\n        $scope.items = [1,2,3,4,5];\r\n        \r\n        $scope.menu = function()\r\n        {\r\n            $mdSidenav('menu').open();\r\n        };\r\n        \r\n        $scope.exists = function (item, list) \r\n        \r\n        {\r\n        return list.indexOf(item) > -1;\r\n        };\r\n        \r\n        $scope.myDate = new Date();\r\n        \r\n        $scope.minDate = new Date(\r\n        \r\n        $scope.myDate.getFullYear(),\r\n        \r\n        $scope.myDate.getMonth() - 2,\r\n        \r\n        $scope.myDate.getDate());\r\n        \r\n        $scope.maxDate = new Date(\r\n        \r\n        $scope.myDate.getFullYear(),\r\n        \r\n        $scope.myDate.getMonth() + 2,\r\n        \r\n        $scope.myDate.getDate());   \r\n        \r\n        $scope.color = {\r\n            red: Math.floor(Math.random() * 255),\r\n            green: Math.floor(Math.random() * 255),\r\n            blue: Math.floor(Math.random() * 255)\r\n          };\r\n          $scope.rating1 = 3;\r\n          $scope.rating2 = 2;\r\n          $scope.rating3 = 4;\r\n          $scope.disabled1 = 0;\r\n          $scope.disabled2 = 70;\r\n\r\n        $scope.query = \r\n        {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n          \r\n        $scope.selected = [];\r\n        \r\n        $scope.toggle = function (item, list) \r\n        {\r\n            var idx = list.indexOf(item);\r\n            if (idx > -1) list.splice(idx, 1);\r\n            else list.push(item);\r\n        };\r\n    }]);\r\n    ","application.controller('DashboardMenuController', ['$location', '$scope',\r\n    function($location, $scope)\r\n    {\r\n        $scope.dashboard = function()\r\n        {\r\n            $location.path('/dashboard');\r\n        };\r\n        \r\n        $scope.charts = function()\r\n        {\r\n            $location.path('/charts');\r\n        };\r\n\r\n        $scope.tables = function()\r\n        {\r\n            $location.path('/tables');\r\n        };\r\n\r\n        $scope.forms = function()\r\n        {\r\n            $location.path('/forms');\r\n        };\r\n\r\n        $scope.uiElement = function()\r\n        {\r\n            $location.path('/uiElement');\r\n        };\r\n\r\n        $scope.dropDown = function()\r\n        {\r\n            $location.path('/dropDown');\r\n        };\r\n\r\n        $scope.samplePages = function()\r\n        {\r\n            $location.path('/samplePages');\r\n        };\r\n    }]);\r\n","application.factory('API', ['Settings',\r\n    function(Settings)\r\n    {\r\n        var api = {};\r\n\r\n        api.access_token    = '/api/access_token';\r\n        api.session         = '/api/session';\r\n        api.users           = '/api/users/:user_id';\r\n        \r\n        api.get = function(endpoint)\r\n        {\r\n            return Settings.host.concat(api[endpoint]);\r\n        };\r\n\r\n        return api;\r\n    }]);\r\n","application.factory('Auth', ['$http', '$location', '$q', '$window', 'API', 'Settings',\r\n    function($http, $location, $q, $window, API, Settings)\r\n    {\r\n        var auth = {};\r\n\r\n        auth.forget = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            $window.localStorage.removeItem('expires_in');\r\n            $window.localStorage.removeItem('access_token');\r\n            $window.localStorage.removeItem('refresh_token');\r\n            $window.localStorage.removeItem('token_type');\r\n            $window.localStorage.removeItem('id');\r\n            $window.localStorage.removeItem('type');\r\n            $window.localStorage.removeItem('scopes');\r\n            $location.path('/login');\r\n\r\n            deferred.resolve();\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.handler = function(response)\r\n        {\r\n            $window.localStorage.expires_in      = response.data.expires_in;\r\n            $window.localStorage.access_token    = response.data.access_token;\r\n            $window.localStorage.refresh_token   = response.data.refresh_token;\r\n            $window.localStorage.token_type      = response.data.token_type;\r\n            return response;\r\n        };\r\n\r\n        auth.id = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('id')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.id);\r\n        };\r\n\r\n        auth.isGuest = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            auth.isLogged()\r\n                .then(function()\r\n                {\r\n                    deferred.reject('auth.is_guest');\r\n                })\r\n                .catch(function()\r\n                {\r\n                    deferred.resolve(true);\r\n                });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.isLogged = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            if ($window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type')) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                deferred.reject('auth.is_logged');\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.refresh = function()\r\n        {\r\n            var data = {\r\n                grant_type: 'refresh_token',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                refresh_token: $window.localStorage.refresh_token,\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        auth.scopes = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('scopes')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.scopes);\r\n        };\r\n\r\n        auth.session = function()\r\n        {\r\n            return $http.get(API.get('session'))\r\n                .then(function(session)\r\n                {\r\n                    console.info(session);\r\n                    $window.localStorage.id = angular.toJson(session.data.id);\r\n                    $window.localStorage.type = angular.toJson(session.data.type);\r\n                    $window.localStorage.scopes = angular.toJson(session.data.scopes);\r\n                });\r\n        };\r\n\r\n        auth.type = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('type')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.type);\r\n        };\r\n\r\n        auth.verify = function(credentials)\r\n        {\r\n            var data = {\r\n                grant_type: 'password',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                username: credentials['username'],\r\n                password: credentials['password'],\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        return auth;\r\n    }]);\r\n\r\n","application.factory('HttpInterceptor', ['$injector', '$q', '$translate', '$window',\r\n    function($injector, $q, $translate, $window)\r\n    {\r\n        var refreshPromise = null;\r\n\r\n        var httpInterceptor = {};\r\n\r\n        httpInterceptor.request = function(config)\r\n        {\r\n            if ($injector.get('Auth').isLogged()) {\r\n                var token_type = $window.localStorage.token_type;\r\n                var access_token = $window.localStorage.access_token;\r\n                config.headers.Authorization = token_type + ' ' + access_token;\r\n            }\r\n\r\n            return config;\r\n        };\r\n\r\n        httpInterceptor.responseError = function(rejection)\r\n        {\r\n            console.error(rejection);\r\n\r\n            switch (rejection.status) {\r\n                case 401:\r\n                    refreshPromise = refreshPromise ? refreshPromise :\r\n                        $injector.get('Auth').refresh();\r\n\r\n                    return refreshPromise.finally(function()\r\n                        {\r\n                            refreshPromise = null;\r\n                        })\r\n                        .then(function()\r\n                        {\r\n                            return $injector.get('$http')(rejection.config);\r\n                        });\r\n\r\n                case 405:\r\n                    $translate('toast_method_not_allowed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 422:\r\n                    $translate('toast_validation_failed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 500:\r\n                    if (rejection.data.message == 'The user credentials were incorrect.') {\r\n                        $translate('toast_incorrect_credentials')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n\r\n                        return $q.reject(rejection);\r\n                    }\r\n\r\n                    if (rejection.data.message == 'The refresh token is invalid.') {\r\n                        $translate('toast_invalid_refresh_token')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n                    }\r\n\r\n                    $injector.get('Auth')\r\n                        .forget();\r\n\r\n                    return $q.reject(rejection);\r\n            }\r\n        };\r\n\r\n        return httpInterceptor;\r\n    }]);\r\n"],"sourceRoot":"/source/"}